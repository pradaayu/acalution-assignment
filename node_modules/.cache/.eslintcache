[{"/home/prada/Documents/acalution-assignment/src/index.js":"1","/home/prada/Documents/acalution-assignment/src/App.js":"2","/home/prada/Documents/acalution-assignment/src/reportWebVitals.js":"3","/home/prada/Documents/acalution-assignment/src/routes/routes.js":"4","/home/prada/Documents/acalution-assignment/src/constants.js":"5","/home/prada/Documents/acalution-assignment/src/pages/ProductListPage.jsx":"6","/home/prada/Documents/acalution-assignment/src/pages/ProductDetailPage.jsx":"7","/home/prada/Documents/acalution-assignment/src/components/productlist/ProductListCard.jsx":"8","/home/prada/Documents/acalution-assignment/src/components/productlist/product-list.hooks.js":"9","/home/prada/Documents/acalution-assignment/src/components/productdetail/ProductDetailCard.jsx":"10","/home/prada/Documents/acalution-assignment/src/components/NavBar.jsx":"11","/home/prada/Documents/acalution-assignment/src/components/AddToCartButton.jsx":"12","/home/prada/Documents/acalution-assignment/src/components/productdetail/product-detail.hooks.js":"13","/home/prada/Documents/acalution-assignment/src/components/BookmarkButton.jsx":"14","/home/prada/Documents/acalution-assignment/src/components/MessageModal.jsx":"15","/home/prada/Documents/acalution-assignment/src/components/productlist/ProductItemCard.jsx":"16","/home/prada/Documents/acalution-assignment/src/components/compability/modal.hooks.js":"17","/home/prada/Documents/acalution-assignment/src/components/compability/modal.provider.js":"18","/home/prada/Documents/acalution-assignment/src/components/compability/modal.context.js":"19"},{"size":500,"mtime":1618824174812,"results":"20","hashOfConfig":"21"},{"size":385,"mtime":1619096820629,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1618808088689,"results":"23","hashOfConfig":"21"},{"size":469,"mtime":1618999445640,"results":"24","hashOfConfig":"21"},{"size":101,"mtime":1618813966366,"results":"25","hashOfConfig":"21"},{"size":558,"mtime":1618994410090,"results":"26","hashOfConfig":"21"},{"size":371,"mtime":1619085628152,"results":"27","hashOfConfig":"21"},{"size":7644,"mtime":1619094868924,"results":"28","hashOfConfig":"21"},{"size":1745,"mtime":1619094018077,"results":"29","hashOfConfig":"21"},{"size":4711,"mtime":1619096850845,"results":"30","hashOfConfig":"21"},{"size":3519,"mtime":1619097175727,"results":"31","hashOfConfig":"21"},{"size":471,"mtime":1619021967916,"results":"32","hashOfConfig":"21"},{"size":1156,"mtime":1619093738004,"results":"33","hashOfConfig":"21"},{"size":453,"mtime":1619014021156,"results":"34","hashOfConfig":"21"},{"size":808,"mtime":1619063553476,"results":"35","hashOfConfig":"21"},{"size":2492,"mtime":1619093998261,"results":"36","hashOfConfig":"21"},{"size":877,"mtime":1619095183242,"results":"37","hashOfConfig":"21"},{"size":1166,"mtime":1619097005888,"results":"38","hashOfConfig":"21"},{"size":426,"mtime":1619096994208,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"bfgmr6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/prada/Documents/acalution-assignment/src/index.js",[],["82","83"],"/home/prada/Documents/acalution-assignment/src/App.js",[],"/home/prada/Documents/acalution-assignment/src/reportWebVitals.js",[],"/home/prada/Documents/acalution-assignment/src/routes/routes.js",[],"/home/prada/Documents/acalution-assignment/src/constants.js",[],"/home/prada/Documents/acalution-assignment/src/pages/ProductListPage.jsx",[],"/home/prada/Documents/acalution-assignment/src/pages/ProductDetailPage.jsx",[],"/home/prada/Documents/acalution-assignment/src/components/productlist/ProductListCard.jsx",["84"],"import React, { useState, useRef, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport AddToCartButton from '../AddToCartButton'\nimport BookmarkButton from '../BookmarkButton'\nimport useProductList from './product-list.hooks'\nimport useModal from '../compability/modal.hooks'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport MessageModal from '../MessageModal'\n// import ProductItemCard from './ProductItemCard'\n\nconst ProductCard = () => {\n  const [page, setPage] = useState(1)\n  const observer = useRef()\n  const {\n    productList, errorMessage,\n    visibleModalError, handleCloseError, \n    loading, error, loadMore, totalPage\n  } = useProductList(page)\n  const {\n    productName,\n    handleClickCart, handleClickBookmark,\n    visibleModal, visibleModalBookmark,\n    handleClose, handleCloseBookmark\n  } = useModal()\n  const lastProductElementRef = useCallback(node => {\n    // console.log('node', node)\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && loadMore) {\n        // console.log('visible')\n        setPage(prevPage => prevPage + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, loadMore]) \n\n  return (\n    <>\n      <Row className=\"justify-content-md-center\">\n\n        {productList.map((item, index) => {\n          if (productList.length === index + 1) {\n            return <Col ref={lastProductElementRef} value={item} key={index} md={4} sm={12} >\n                <Link to={`product/${item.id}`}>\n                  <Row className=\"mb-5\">\n                    <Col className=\"justify-content-md-center\" md={3}>\n                      <div>\n                        <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n                      </div>\n                    </Col>\n                    <Col>\n                      <div style={{height: '160px'}}>\n                        <div style={{height: '120px', overflow: 'hidden'}}>\n                          <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n                          <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n                          <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n                          <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n                        </div>\n                        <Row className=\"mt-2\" style={{height: '55px'}}>\n                          <Col md={7} className=\"text-left\">\n                            <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n                          </Col>\n                            {\n                              item.qty <= 5 ?\n                              <div className='text-center py-1 mt-n3'\n                                style={{\n                                  backgroundColor: '#CC962C', color: 'white',\n                                  borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n                                }}\n                              >\n                                <span>{item.qty}<br/>Left</span>\n                              </div>\n                               : ''\n                            }\n                        </Row>\n                      </div>\n                      <Row className=\"ml-1\">\n                        <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n                        <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Link>\n              </Col>\n          } else {\n            return <Col value={item} key={index} md={4} sm={12} >\n                <Link to={`product/${item.id}`}>\n                  <Row className=\"mb-5\">\n                    <Col className=\"justify-content-md-center\" md={3}>\n                      <div>\n                        <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n                      </div>\n                    </Col>\n                    <Col>\n                      <div style={{height: '160px'}}>\n                        <div style={{height: '120px', overflow: 'hidden'}}>\n                          <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n                          <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n                          <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n                          <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n                        </div>\n                        <Row className=\"mt-2\" style={{height: '55px'}}>\n                          <Col md={7} className=\"text-left\">\n                            <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n                          </Col>\n                            {\n                              item.qty <= 5 ?\n                              <div className='text-center py-1 mt-n3'\n                                style={{\n                                  backgroundColor: '#CC962C', color: 'white',\n                                  borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n                                }}\n                              >\n                                <span>{item.qty}<br/>Left</span>\n                              </div>\n                               : ''\n                            }\n                        </Row>\n                      </div>\n                      <Row className=\"ml-1\">\n                        <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n                        <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Link>\n              </Col>\n          }\n        })}\n\n        <div>\n          {\n            error &&\n            <MessageModal\n              visibleModal={visibleModalError}\n              handleClose={handleCloseError}\n              message={errorMessage}\n              productName=\"\"\n              isSuccess={false}\n            />\n          }\n        </div>\n\n      </Row>\n\n        {\n          loading && \n          <Row className=\"text-center justify-content-center\">\n            <Spinner animation=\"grow\"></Spinner>\n            <Spinner animation=\"grow\"></Spinner>\n            <Spinner animation=\"grow\"></Spinner>\n          </Row>\n        }\n\n      {\n        page === 1 && loadMore ?\n        <Row className=\"text-center justify-content-center\">\n          <Button variant=\"flat\">Load More</Button>\n        </Row>\n        :\n        ''\n      }\n\n      <MessageModal\n        visibleModal={visibleModalBookmark}\n        handleClose={handleCloseBookmark}\n        message=\"is bookmarked\"\n        productName={productName}\n        isSuccess={true}\n      />\n      <MessageModal\n        visibleModal={visibleModal}\n        handleClose={handleClose}\n        message=\"is added to cart\"\n        productName={productName}\n        isSuccess={true}\n      />\n    </>\n  )\n}\n\nexport default ProductCard","/home/prada/Documents/acalution-assignment/src/components/productlist/product-list.hooks.js",["85"],"import {useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { BASE_URL } from '../../constants'\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/list?page=${currentPage}\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/${id}\n\nconst useProductList = (page) => {\n  const [productList, setProductList] = useState([])\n  const [totalPage, setTotalPage] = useState(0)\n  const [visibleModalError, setVisibleModalError] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [loadMore, setLoadMore] = useState(false)\n  const handleCloseError = () => setVisibleModalError(false)\n  // console.log('product list', productList)\n\n  useEffect(() => {\n    getProductList(page)\n  }, [page])\n  const getProductList = async (page) => {\n    setLoading(true)\n    setError(false)\n    try {\n      const params = {\n        page: page,\n      }\n      const res = await axios.get(`${BASE_URL}/list?page=${params.page}`)\n      if (res.status === 200) {\n        const products = res.data.value.products\n        setTotalPage(Math.ceil(res.data.value.totalCount / 20))\n        setProductList(prevProductList => {\n          return [...prevProductList, ...products]\n        })\n        setLoadMore(page !== totalPage) // check if there's still data to load\n        setLoading(false)\n      }\n    } catch (error) {\n      setError(true)\n      setErrorMessage(error)\n      setVisibleModalError(true)\n      setLoading(false)\n    }\n  }\n  return {\n    productList,handleCloseError, visibleModalError,\n    errorMessage, loading, error, loadMore, totalPage\n  }\n}\n\nexport default useProductList","/home/prada/Documents/acalution-assignment/src/components/productdetail/ProductDetailCard.jsx",["86"],"/home/prada/Documents/acalution-assignment/src/components/NavBar.jsx",[],"/home/prada/Documents/acalution-assignment/src/components/AddToCartButton.jsx",[],"/home/prada/Documents/acalution-assignment/src/components/productdetail/product-detail.hooks.js",["87"],"import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { BASE_URL } from '../../constants'\nimport { useParams } from 'react-router-dom'\n\nconst useProductDetail = () => {\n  const { id } = useParams()\n  const [productDetail, setProductDetail] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [visibleModalError, setVisibleModalError] = useState(false)\n  const [error, setError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const handleCloseError = () => setVisibleModalError(false)\n  useEffect(() => {\n    getProductDetail(id)\n  }, [])\n\n  const getProductDetail = async (id) => {\n    setLoading(true)\n    try {\n      const res = await axios.get(`${BASE_URL}/${id}`)\n      if (res.status === 200) {\n      const productDetail = res.data\n      setProductDetail(productDetail.value)\n      setLoading(false)\n      }\n    } catch (error) {\n      setError(true)\n      setErrorMessage(error)\n      setVisibleModalError(true)\n      setLoading(false)\n    }\n  }\n  return {\n    productDetail, loading, error, errorMessage, visibleModalError, handleCloseError\n  }\n}\n\nexport default useProductDetail","/home/prada/Documents/acalution-assignment/src/components/BookmarkButton.jsx",[],"/home/prada/Documents/acalution-assignment/src/components/MessageModal.jsx",[],"/home/prada/Documents/acalution-assignment/src/components/productlist/ProductItemCard.jsx",["88","89","90","91","92","93","94","95","96","97"],"/home/prada/Documents/acalution-assignment/src/components/compability/modal.hooks.js",[],"/home/prada/Documents/acalution-assignment/src/components/compability/modal.provider.js",[],"/home/prada/Documents/acalution-assignment/src/components/compability/modal.context.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":31,"nodeType":"104","messageId":"105","endLine":20,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":20,"column":6,"nodeType":"108","endLine":20,"endColumn":12,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":55,"column":11,"nodeType":"112","endLine":55,"endColumn":66},{"ruleId":"106","severity":1,"message":"113","line":16,"column":6,"nodeType":"108","endLine":16,"endColumn":8,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"116","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":22},{"ruleId":"102","severity":1,"message":"117","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"102","severity":1,"message":"118","line":13,"column":5,"nodeType":"104","messageId":"105","endLine":13,"endColumn":16},{"ruleId":"102","severity":1,"message":"119","line":14,"column":5,"nodeType":"104","messageId":"105","endLine":14,"endColumn":20},{"ruleId":"102","severity":1,"message":"120","line":14,"column":22,"nodeType":"104","messageId":"105","endLine":14,"endColumn":41},{"ruleId":"102","severity":1,"message":"121","line":15,"column":5,"nodeType":"104","messageId":"105","endLine":15,"endColumn":17},{"ruleId":"102","severity":1,"message":"122","line":15,"column":19,"nodeType":"104","messageId":"105","endLine":15,"endColumn":39},{"ruleId":"102","severity":1,"message":"123","line":16,"column":5,"nodeType":"104","messageId":"105","endLine":16,"endColumn":16},{"ruleId":"102","severity":1,"message":"124","line":16,"column":18,"nodeType":"104","messageId":"105","endLine":16,"endColumn":37},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'totalPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductList'. Either include it or remove the dependency array.","ArrayExpression",["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["128"],"'AddToCartButton' is defined but never used.","'BookmarkButton' is defined but never used.","'MessageModal' is defined but never used.","'productName' is assigned a value but never used.","'handleClickCart' is assigned a value but never used.","'handleClickBookmark' is assigned a value but never used.","'visibleModal' is assigned a value but never used.","'visibleModalBookmark' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleCloseBookmark' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [getProductList, page]",{"range":"133","text":"134"},"Update the dependencies array to be: [id]",{"range":"135","text":"136"},[861,867],"[getProductList, page]",[604,606],"[id]"]