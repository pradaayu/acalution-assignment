{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL } from '../../constants'; // https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/list?page=${currentPage}\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/${id}\n\nconst useProductList = page => {\n  _s();\n\n  const [productList, setProductList] = useState([]);\n  const [totalProduct, setTotalProduct] = useState(0);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visibleModalBookmark, setVisibleModalBookmark] = useState(false);\n  const [productName, setProductName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n\n  const handleClose = () => setVisibleModal(false);\n\n  const handleOpen = () => setVisibleModal(true);\n\n  const handleCloseBookmark = () => setVisibleModalBookmark(false);\n\n  const handleOpenBookmark = () => setVisibleModalBookmark(true);\n\n  console.log('product list', productList);\n  const history = useHistory();\n  useEffect(() => {\n    getProductList(page);\n  }, []);\n\n  const getProductList = async page => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const params = {\n        page: page,\n        rowsPerPage: 272\n      };\n      const res = await axios.get(`${BASE_URL}/list?page=${params.page}&rowsPerPage=${params.rowsPerPage}`);\n\n      if (res.status === 200) {\n        console.log('result', res);\n        const products = res.data.value.products;\n        setTotalProduct(res.data.value.totalCount);\n        setProductList(prevProductList => {\n          return [...prevProductList, ...products];\n        });\n        setLoadMore(products.length > 0);\n        setLoading(false);\n      }\n    } catch (error) {\n      alert('cannot fetch data', error);\n      setError(true); // TODO: make function/state to return error so it can be called in jsx file\n    }\n  };\n\n  const handleClickCart = (name, e) => {\n    console.log('cart button is clicked', name);\n    e.preventDefault();\n    setProductName(name);\n    handleOpen();\n  };\n\n  const handleClickBookmark = (name, e) => {\n    console.log('button is clicked', 'yay');\n    e.preventDefault();\n    setProductName(name);\n    handleOpenBookmark();\n  };\n\n  return {\n    productList,\n    handleClickCart,\n    visibleModal,\n    handleClose,\n    visibleModalBookmark,\n    handleClickBookmark,\n    handleCloseBookmark,\n    productName,\n    loading,\n    error,\n    loadMore\n  };\n};\n\n_s(useProductList, \"oOOfq2KerZbKfTxlNW4WL+HnESQ=\", false, function () {\n  return [useHistory];\n});\n\nexport default useProductList;","map":{"version":3,"sources":["/home/prada/Documents/acalution-assignment/src/components/productlist/product-list.hooks.js"],"names":["useEffect","useState","useHistory","axios","BASE_URL","useProductList","page","productList","setProductList","totalProduct","setTotalProduct","visibleModal","setVisibleModal","visibleModalBookmark","setVisibleModalBookmark","productName","setProductName","loading","setLoading","error","setError","loadMore","setLoadMore","handleClose","handleOpen","handleCloseBookmark","handleOpenBookmark","console","log","history","getProductList","params","rowsPerPage","res","get","status","products","data","value","totalCount","prevProductList","length","alert","handleClickCart","name","e","preventDefault","handleClickBookmark"],"mappings":"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","sourcesContent":["import {useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { BASE_URL } from '../../constants'\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/list?page=${currentPage}\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/${id}\n\nconst useProductList = (page) => {\n  const [productList, setProductList] = useState([])\n  const [totalProduct, setTotalProduct] = useState(0)\n  const [visibleModal, setVisibleModal] = useState(false)\n  const [visibleModalBookmark, setVisibleModalBookmark] = useState(false)\n  const [productName, setProductName] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [loadMore, setLoadMore] = useState(false)\n  const handleClose = () => setVisibleModal(false)\n  const handleOpen = () => setVisibleModal(true)\n  const handleCloseBookmark = () => setVisibleModalBookmark(false)\n  const handleOpenBookmark = () => setVisibleModalBookmark(true)\n  console.log('product list', productList)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    getProductList(page)\n  }, [])\n  const getProductList = async (page) => {\n    setLoading(true)\n    setError(false)\n    try {\n      const params = {\n        page: page,\n        rowsPerPage: 272\n      }\n      const res = await axios.get(`${BASE_URL}/list?page=${params.page}&rowsPerPage=${params.rowsPerPage}`)\n      if (res.status === 200) {\n        console.log('result', res)\n        const products = res.data.value.products\n        setTotalProduct(res.data.value.totalCount)\n        setProductList(prevProductList => {\n          return [...prevProductList, ...products]\n        })\n        setLoadMore(products.length > 0)\n        setLoading(false)\n      }\n    } catch (error) {\n      alert('cannot fetch data', error)\n      setError(true)\n      // TODO: make function/state to return error so it can be called in jsx file\n    }\n  }\n  const handleClickCart = (name, e) => {\n    console.log('cart button is clicked', name)\n    e.preventDefault()\n    setProductName(name)\n    handleOpen()\n  }\n  const handleClickBookmark = (name, e) => {\n    console.log('button is clicked', 'yay')\n    e.preventDefault()\n    setProductName(name)\n    handleOpenBookmark()\n  }\n  return {\n    productList, handleClickCart, visibleModal, handleClose, visibleModalBookmark, handleClickBookmark, handleCloseBookmark, productName,\n    loading, error, loadMore\n  }\n}\n\nexport default useProductList"]},"metadata":{},"sourceType":"module"}