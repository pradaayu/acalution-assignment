{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL } from '../../constants'; // https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/list?page=${currentPage}\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/${id}\n\nconst useProductList = () => {\n  _s();\n\n  const [productList, setProductList] = useState([]);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visibleModalBookmark, setVisibleModalBookmark] = useState(false);\n  const [productName, setProductName] = useState('');\n\n  const handleClose = () => setVisibleModal(false);\n\n  const handleOpen = () => setVisibleModal(true);\n\n  const handleCloseBookmark = () => setVisibleModalBookmark(false);\n\n  const handleOpenBookmark = () => setVisibleModalBookmark(true);\n\n  console.log('product list', productList);\n  const history = useHistory();\n  useEffect(() => {\n    getProductList(1);\n  }, []);\n\n  const getProductList = async page => {\n    const res = await axios.get(`${BASE_URL}/list?page=${page}`);\n\n    if (res.status === 200) {\n      const products = res.data.value.products;\n      setProductList(products);\n    } else alert('cannot fetch data');\n  };\n\n  const handleClickCart = (name, e) => {\n    console.log('cart button is clicked', name);\n    e.preventDefault();\n    setProductName(name);\n    handleOpen();\n  };\n\n  const handleClickBookmark = e => {\n    console.log('button is clicked', 'yay');\n    e.preventDefault();\n    setProductName(name);\n    handleOpenBookmark();\n  };\n\n  return {\n    productList,\n    handleClickCart,\n    visibleModal,\n    handleClose,\n    visibleModalBookmark,\n    handleClickBookmark,\n    handleCloseBookmark,\n    productName\n  };\n};\n\n_s(useProductList, \"S30ivqe2LwXJnd72BaGIokLveT4=\", false, function () {\n  return [useHistory];\n});\n\nexport default useProductList;","map":{"version":3,"sources":["/home/prada/Documents/acalution-assignment/src/components/productlist/product-list.hooks.js"],"names":["useEffect","useState","useHistory","axios","BASE_URL","useProductList","productList","setProductList","visibleModal","setVisibleModal","visibleModalBookmark","setVisibleModalBookmark","productName","setProductName","handleClose","handleOpen","handleCloseBookmark","handleOpenBookmark","console","log","history","getProductList","page","res","get","status","products","data","value","alert","handleClickCart","name","e","preventDefault","handleClickBookmark"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CACA;AACA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,oBAAD,EAAuBC,uBAAvB,IAAkDV,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMa,WAAW,GAAG,MAAML,eAAe,CAAC,KAAD,CAAzC;;AACA,QAAMM,UAAU,GAAG,MAAMN,eAAe,CAAC,IAAD,CAAxC;;AACA,QAAMO,mBAAmB,GAAG,MAAML,uBAAuB,CAAC,KAAD,CAAzD;;AACA,QAAMM,kBAAkB,GAAG,MAAMN,uBAAuB,CAAC,IAAD,CAAxD;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,WAA5B;AAEA,QAAMc,OAAO,GAAGlB,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,cAAc,GAAG,MAAOC,IAAP,IAAgB;AACrC,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,GAAEpB,QAAS,cAAakB,IAAK,EAAxC,CAAlB;;AACA,QAAIC,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAMC,QAAQ,GAAGH,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAeF,QAAhC;AACAnB,MAAAA,cAAc,CAACmB,QAAD,CAAd;AACD,KAHD,MAGOG,KAAK,CAAC,mBAAD,CAAL;AACR,GAND;;AAOA,QAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AACnCd,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCY,IAAtC;AACAC,IAAAA,CAAC,CAACC,cAAF;AACApB,IAAAA,cAAc,CAACkB,IAAD,CAAd;AACAhB,IAAAA,UAAU;AACX,GALD;;AAMA,QAAMmB,mBAAmB,GAAIF,CAAD,IAAO;AACjCd,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAjC;AACAa,IAAAA,CAAC,CAACC,cAAF;AACApB,IAAAA,cAAc,CAACkB,IAAD,CAAd;AACAd,IAAAA,kBAAkB;AACnB,GALD;;AAMA,SAAO;AACLX,IAAAA,WADK;AACQwB,IAAAA,eADR;AACyBtB,IAAAA,YADzB;AACuCM,IAAAA,WADvC;AACoDJ,IAAAA,oBADpD;AAC0EwB,IAAAA,mBAD1E;AAC+FlB,IAAAA,mBAD/F;AACoHJ,IAAAA;AADpH,GAAP;AAGD,CAtCD;;GAAMP,c;UAWYH,U;;;AA6BlB,eAAeG,cAAf","sourcesContent":["import {useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { BASE_URL } from '../../constants'\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/list?page=${currentPage}\n// https://zax5j10412.execute-api.ap-southeast-1.amazonaws.com/dev/api/product/${id}\n\nconst useProductList = () => {\n  const [productList, setProductList] = useState([])\n  const [visibleModal, setVisibleModal] = useState(false)\n  const [visibleModalBookmark, setVisibleModalBookmark] = useState(false)\n  const [productName, setProductName] = useState('')\n  const handleClose = () => setVisibleModal(false)\n  const handleOpen = () => setVisibleModal(true)\n  const handleCloseBookmark = () => setVisibleModalBookmark(false)\n  const handleOpenBookmark = () => setVisibleModalBookmark(true)\n  console.log('product list', productList)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    getProductList(1)\n  }, [])\n  const getProductList = async (page) => {\n    const res = await axios.get(`${BASE_URL}/list?page=${page}`)\n    if (res.status === 200) {\n      const products = res.data.value.products\n      setProductList(products)\n    } else alert('cannot fetch data')\n  }\n  const handleClickCart = (name, e) => {\n    console.log('cart button is clicked', name)\n    e.preventDefault()\n    setProductName(name)\n    handleOpen()\n  }\n  const handleClickBookmark = (e) => {\n    console.log('button is clicked', 'yay')\n    e.preventDefault()\n    setProductName(name)\n    handleOpenBookmark()\n  }\n  return {\n    productList, handleClickCart, visibleModal, handleClose, visibleModalBookmark, handleClickBookmark, handleCloseBookmark, productName\n  }\n}\n\nexport default useProductList"]},"metadata":{},"sourceType":"module"}