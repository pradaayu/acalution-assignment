{"ast":null,"code":"var _jsxFileName = \"/home/prada/Documents/acalution-assignment/src/components/productlist/ProductListCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddToCartButton from '../AddToCartButton';\nimport BookmarkButton from '../BookmarkButton';\nimport useProductList from './product-list.hooks';\nimport useModal from '../compability/modal.hooks';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport MessageModal from '../MessageModal';\nimport ProductItemCard from './ProductItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductCard = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const observer = useRef();\n  const {\n    productList,\n    errorMessage,\n    visibleModalError,\n    handleCloseError,\n    loading,\n    error,\n    loadMore\n  } = useProductList(page);\n  const {\n    productName,\n    handleClickCart,\n    handleClickBookmark,\n    visibleModal,\n    visibleModalBookmark,\n    handleClose,\n    handleCloseBookmark\n  } = useModal();\n  const lastProductElementRef = useCallback(node => {\n    // console.log('node', node)\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && loadMore) {\n        // console.log('visible')\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, loadMore]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [productList.map((item, index) => {\n        if (productList.length === index + 1) {\n          return /*#__PURE__*/_jsxDEV(ProductItemCard, {\n            ref: lastProductElementRef,\n            value: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this); // <Col ref={lastProductElementRef} value={item} key={index} md={4} sm={12} >\n          //     <Link to={`product/${item.id}`}>\n          //       <Row className=\"mb-5\">\n          //         <Col className=\"justify-content-md-center\" md={3}>\n          //           <div>\n          //             <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n          //           </div>\n          //         </Col>\n          //         <Col>\n          //           <div style={{height: '160px'}}>\n          //             <div style={{height: '120px', overflow: 'hidden'}}>\n          //               <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n          //               <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n          //               <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n          //               <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n          //             </div>\n          //             <Row className=\"mt-2\" style={{height: '55px'}}>\n          //               <Col md={7} className=\"text-left\">\n          //                 <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n          //               </Col>\n          //                 {\n          //                   item.qty <= 5 ?\n          //                   <div className='text-center py-1 mt-n3'\n          //                     style={{\n          //                       backgroundColor: '#CC962C', color: 'white',\n          //                       borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n          //                     }}\n          //                   >\n          //                     <span>{item.qty}<br/>Left</span>\n          //                   </div>\n          //                    : ''\n          //                 }\n          //             </Row>\n          //           </div>\n          //           <Row className=\"ml-1\">\n          //             <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n          //             <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n          //           </Row>\n          //         </Col>\n          //       </Row>\n          //     </Link>\n          //   </Col>\n        } else {\n          return /*#__PURE__*/_jsxDEV(ProductItemCard, {\n            value: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this); // <Col value={item} key={index} md={4} sm={12} >\n          //       <Link to={`product/${item.id}`}>\n          //         <Row className=\"mb-5\">\n          //           <Col className=\"justify-content-md-center\" md={3}>\n          //             <div>\n          //               <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n          //             </div>\n          //           </Col>\n          //           <Col>\n          //             <div style={{height: '160px'}}>\n          //               <div style={{height: '120px', overflow: 'hidden'}}>\n          //                 <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n          //                 <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n          //                 <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n          //                 <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n          //               </div>\n          //               <Row className=\"mt-2\" style={{height: '55px'}}>\n          //                 <Col md={7} className=\"text-left\">\n          //                   <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n          //                 </Col>\n          //                   {\n          //                     item.qty <= 5 ?\n          //                     <div className='text-center py-1 mt-n3'\n          //                       style={{\n          //                         backgroundColor: '#CC962C', color: 'white',\n          //                         borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n          //                       }}\n          //                     >\n          //                       <span>{item.qty}<br/>Left</span>\n          //                     </div>\n          //                      : ''\n          //                   }\n          //               </Row>\n          //             </div>\n          //             <Row className=\"ml-1\">\n          //               <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n          //               <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n          //             </Row>\n          //           </Col>\n          //         </Row>\n          //       </Link>\n          //     </Col>\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error && /*#__PURE__*/_jsxDEV(MessageModal, {\n          visibleModal: visibleModalError,\n          handleClose: handleCloseError,\n          message: errorMessage,\n          productName: \"\",\n          isSuccess: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this), page === 1 && loadMore ? /*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"flat\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(MessageModal, {\n      visibleModal: visibleModalBookmark,\n      handleClose: handleCloseBookmark,\n      message: \"is bookmarked\",\n      productName: productName,\n      isSuccess: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      visibleModal: visibleModal,\n      handleClose: handleClose,\n      message: \"is added to cart\",\n      productName: productName,\n      isSuccess: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductCard, \"MCZITt/iSHzBCRNvCb6vtGaj/E4=\", false, function () {\n  return [useProductList, useModal];\n});\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["/home/prada/Documents/acalution-assignment/src/components/productlist/ProductListCard.jsx"],"names":["React","useState","useRef","useCallback","Link","AddToCartButton","BookmarkButton","useProductList","useModal","Row","Col","Button","Spinner","MessageModal","ProductItemCard","ProductCard","page","setPage","observer","productList","errorMessage","visibleModalError","handleCloseError","loading","error","loadMore","productName","handleClickCart","handleClickBookmark","visibleModal","visibleModalBookmark","handleClose","handleCloseBookmark","lastProductElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","map","item","index","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport AddToCartButton from '../AddToCartButton'\nimport BookmarkButton from '../BookmarkButton'\nimport useProductList from './product-list.hooks'\nimport useModal from '../compability/modal.hooks'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport MessageModal from '../MessageModal'\nimport ProductItemCard from './ProductItemCard'\n\nconst ProductCard = () => {\n  const [page, setPage] = useState(1)\n  const observer = useRef()\n  const {\n    productList, errorMessage,\n    visibleModalError, handleCloseError, \n    loading, error, loadMore\n  } = useProductList(page)\n  const {\n    productName,\n    handleClickCart, handleClickBookmark,\n    visibleModal, visibleModalBookmark,\n    handleClose, handleCloseBookmark\n  } = useModal()\n  const lastProductElementRef = useCallback(node => {\n    // console.log('node', node)\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && loadMore) {\n        // console.log('visible')\n        setPage(prevPage => prevPage + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, loadMore]) \n\n  return (\n    <>\n      <Row className=\"justify-content-md-center\">\n\n        {productList.map((item, index) => {\n          if (productList.length === index + 1) {\n            return <ProductItemCard ref={lastProductElementRef}  value={item} key={index}/> \n            // <Col ref={lastProductElementRef} value={item} key={index} md={4} sm={12} >\n            //     <Link to={`product/${item.id}`}>\n            //       <Row className=\"mb-5\">\n            //         <Col className=\"justify-content-md-center\" md={3}>\n            //           <div>\n            //             <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n            //           </div>\n            //         </Col>\n            //         <Col>\n            //           <div style={{height: '160px'}}>\n            //             <div style={{height: '120px', overflow: 'hidden'}}>\n            //               <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n            //               <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n            //               <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n            //               <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n            //             </div>\n            //             <Row className=\"mt-2\" style={{height: '55px'}}>\n            //               <Col md={7} className=\"text-left\">\n            //                 <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n            //               </Col>\n            //                 {\n            //                   item.qty <= 5 ?\n            //                   <div className='text-center py-1 mt-n3'\n            //                     style={{\n            //                       backgroundColor: '#CC962C', color: 'white',\n            //                       borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n            //                     }}\n            //                   >\n            //                     <span>{item.qty}<br/>Left</span>\n            //                   </div>\n            //                    : ''\n            //                 }\n            //             </Row>\n            //           </div>\n            //           <Row className=\"ml-1\">\n            //             <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n            //             <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n            //           </Row>\n            //         </Col>\n            //       </Row>\n            //     </Link>\n            //   </Col>\n          } else {\n            return <ProductItemCard  value={item} key={index}/> \n          // <Col value={item} key={index} md={4} sm={12} >\n          //       <Link to={`product/${item.id}`}>\n          //         <Row className=\"mb-5\">\n          //           <Col className=\"justify-content-md-center\" md={3}>\n          //             <div>\n          //               <img style={{minWidth: '80px'}} className=\"img-fluid\" src={item.image} alt=\"bottle\"/>\n          //             </div>\n          //           </Col>\n          //           <Col>\n          //             <div style={{height: '160px'}}>\n          //               <div style={{height: '120px', overflow: 'hidden'}}>\n          //                 <div className=\"h5\" style={{color: '#842529'}}>{item.name} {item.vintageYear !== 0 ? item.vintageYear : ''}</div>\n          //                 <div style={{color: '#313131'}}>{item.type} | {item.grapeVarietes}</div>\n          //                 <div style={{color: '#313131'}}>{item.vintageYear === 0 ? 'Non Vintage' : ''}</div>\n          //                 <div style={{color: '#313131'}}>{item.country}, {item.region}</div>\n          //               </div>\n          //               <Row className=\"mt-2\" style={{height: '55px'}}>\n          //                 <Col md={7} className=\"text-left\">\n          //                   <div style={{color: '#242424'}} className=\"h5\">S${item.price}</div>\n          //                 </Col>\n          //                   {\n          //                     item.qty <= 5 ?\n          //                     <div className='text-center py-1 mt-n3'\n          //                       style={{\n          //                         backgroundColor: '#CC962C', color: 'white',\n          //                         borderRadius: '50%', fontSize: '12px', height: '50px', width: '50px'\n          //                       }}\n          //                     >\n          //                       <span>{item.qty}<br/>Left</span>\n          //                     </div>\n          //                      : ''\n          //                   }\n          //               </Row>\n          //             </div>\n          //             <Row className=\"ml-1\">\n          //               <AddToCartButton handleClickButton={(e) => handleClickCart(item.name, e)} textSize=\"12px\"/>                    \n          //               <BookmarkButton handleClickButton={(e) => handleClickBookmark(item.name, e)}/>\n          //             </Row>\n          //           </Col>\n          //         </Row>\n          //       </Link>\n          //     </Col>\n          }\n        })}\n\n        <div>\n          {\n            error &&\n            <MessageModal\n              visibleModal={visibleModalError}\n              handleClose={handleCloseError}\n              message={errorMessage}\n              productName=\"\"\n              isSuccess={false}\n            />\n          }\n        </div>\n\n      </Row>\n\n        {\n          loading && \n          <Row className=\"text-center justify-content-center\">\n            <Spinner animation=\"grow\"></Spinner>\n            <Spinner animation=\"grow\"></Spinner>\n            <Spinner animation=\"grow\"></Spinner>\n          </Row>\n        }\n\n      {\n        page === 1 && loadMore ?\n        <Row className=\"text-center justify-content-center\">\n          <Button variant=\"flat\">Load More</Button>\n        </Row>\n        :\n        ''\n      }\n\n      <MessageModal\n        visibleModal={visibleModalBookmark}\n        handleClose={handleCloseBookmark}\n        message=\"is bookmarked\"\n        productName={productName}\n        isSuccess={true}\n      />\n      <MessageModal\n        visibleModal={visibleModal}\n        handleClose={handleClose}\n        message=\"is added to cart\"\n        productName={productName}\n        isSuccess={true}\n      />\n    </>\n  )\n}\n\nexport default ProductCard"]},"metadata":{},"sourceType":"module"}